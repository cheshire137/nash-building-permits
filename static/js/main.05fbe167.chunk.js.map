{"version":3,"sources":["models/LocalStorage.js","models/SocrataApi.js","models/Util.js","models/BuildingPermit.js","models/BuildingPermitsIssuedApi.js","components/ZipCodeSelect.js","components/TypeSelect.js","components/YearSelect.js","components/FilterForm.js","components/PermitMap.js","components/PermitList.js","App.js","serviceWorker.js","index.js"],"names":["LocalStorage","window","localStorage","console","error","appData","getItem","JSON","parse","key","this","getJSON","value","setItem","stringify","SocrataApi","appToken","baseUrl","Object","classCallCheck","query","concat","jsonFormatter","url","urlFor","cachedUrls","get","cachedResponses","today","Date","dateFetched","d1","d2","Math","abs","getTime","log","fetch","method","headers","Content-Type","X-App-Token","response","json","set","Util","list","hash","keyFor","item","toString","originalItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","keys","map","categorySeparator","categoryIcons","Commercial","Residential","Other","Repair","Demolition","Tree","Pool","Restaurant","categoryMarkerColors","BuildingPermit","data","type","permit_type_description","replace","subtype","permit_subtype_description","address","mapped_location_address","city","mapped_location_city","state","mapped_location_state","zipCode","zip","mapped_location_zip","contact","councilDistrict","council_dist","dateIssued","date_issued","latitude","longitude","mapped_location","coordinates","permit","subdivisionLot","subdivision_lot","purpose","indexOf","split","position","word","toLowerCase","typeContains","subtypeContains","isRestaurant","isTree","isPool","isRepair","isDemolition","category","getFullYear","criteria","year","matchesZipCode","matchesType","matchesYear","apiUrl","BuildingPermitsIssuedApi","possibleConstructorReturn","getPrototypeOf","call","dataFormatter","rows","row","ZipCodeSelect","onChange","event","_this","props","target","_this$props","allZipCodes","selectedZipCode","zipCodes","uniq","sort","react_default","a","createElement","htmlFor","className","id","Component","getTypesForCategory","types","filter","TypeSelect","allTypes","selectedType","categories","push","length","getCategories","typesByCategory","result","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getTypesByCategory","label","count","otherType","subcategory","displayName","YearSelect","allYears","selectedYear","years","reverse","otherYear","FilterForm","buildingPermits","onZipCodeChange","onTypeChange","onYearChange","permitsInZip","components_ZipCodeSelect","components_TypeSelect","components_YearSelect","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","PermitMap","geocodedPermits","hasCoordinates","center","lat","lng","getCenterPosition","_getBoundsAndZoom","geocodes","bounds","zoom","minLatGeocode","minLngGeocode","maxLatGeocode","maxLngGeocode","geocode","getBoundsAndZoom","Map","TileLayer","attribution","Marker","icon","AwesomeMarkers","markerColor","prefix","Popup","toLocaleDateString","Tooltip","renderIcon","original","formatDateCell","_ref","month","getMonth","day","getDate","formatLongText","_ref2","title","centerText","_ref3","PermitList","es","columns","Header","accessor","d","headerClassName","Cell","width","sortable","minWidth","pageSize","showPageSizeOptions","zipCodeKey","typeKey","yearKey","App","onDataLoaded","firstZipCode","setState","prevState","isLoading","filteredBuildingPermits","filterBuildingPermits","matches","Config","socrataApi","getBuildingPermits","then","_this$state","components_FilterForm","src_components_PermitMap","src_components_PermitList","rel","href","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05fbe167.chunk.js","sourcesContent":["const localStorageKey = 'nash-building-permits';\n\nclass LocalStorage {\n  static getJSON() {\n    if (!window.localStorage) {\n      console.error('browser does not support local storage');\n      return {};\n    }\n\n    const appData = window.localStorage.getItem(localStorageKey) || \"{}\";\n    return JSON.parse(appData);\n  }\n\n  static get(key) {\n    const appData = this.getJSON();\n    return appData[key];\n  }\n\n  static set(key, value) {\n    const appData = this.getJSON();\n    appData[key] = value;\n    window.localStorage.setItem(localStorageKey, JSON.stringify(appData));\n  }\n\n  static delete(key) {\n    const appData = this.getJSON();\n    delete appData[key];\n    window.localStorage.setItem(localStorageKey, JSON.stringify(appData));\n  }\n}\n\nexport default LocalStorage;\n","import LocalStorage from './LocalStorage';\n\nconst cachedUrlsKey = 'cached-urls';\nconst cachedResponsesKey = 'cached-responses';\n\nconst daysBetween = function(d1, d2) {\n  const diff = Math.abs(d1.getTime() - d2.getTime());\n  return diff / (1000 * 60 * 60 * 24);\n};\n\nclass SocrataApi {\n  constructor(appToken, baseUrl) {\n    this.appToken = appToken;\n    this.baseUrl = baseUrl;\n  }\n\n  urlFor(query) {\n    return `${this.baseUrl}${query || ''}`;\n  }\n\n  async get(query, jsonFormatter) {\n    const url = this.urlFor(query);\n    const cachedUrls = LocalStorage.get(cachedUrlsKey) || {};\n    const cachedResponses = LocalStorage.get(cachedResponsesKey) || {};\n    const today = new Date();\n\n    if (cachedUrls[url]) {\n      const dateFetched = new Date(cachedUrls[url]);\n      if (daysBetween(today, dateFetched) <= 1) {\n        console.log('using cached data for', url);\n        return cachedResponses[url];\n      }\n    }\n\n    console.log('GET', url);\n    const response = await window.fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-App-Token': this.appToken\n      }\n    })\n    const json = await response.json();\n    cachedResponses[url] = jsonFormatter(json);\n    cachedUrls[url] = today;\n    LocalStorage.set(cachedUrlsKey, cachedUrls);\n    LocalStorage.set(cachedResponsesKey, cachedResponses);\n    return cachedResponses[url];\n  }\n}\n\nexport default SocrataApi;\n","class Util {\n  static uniq(list) {\n    if (!list) {\n      return list;\n    }\n    const hash = {};\n    const keyFor = item => item.toString();\n    const originalItems = {};\n    for (const item of list) {\n      const key = keyFor(item);\n      originalItems[key] = item;\n      hash[key] = 1;\n    }\n    const keysToKeep = Object.keys(hash);\n    return keysToKeep.map(key => originalItems[key]);\n  }\n}\n\nUtil.categorySeparator = ' - ';\n\nexport default Util;\n","import Util from './Util';\n\nconst categoryIcons = {\n  Commercial: 'briefcase',\n  Residential: 'home',\n  Other: 'more',\n  Repair: 'hammer',\n  Demolition: 'trash-a',\n  Tree: 'leaf',\n  Pool: 'waterdrop',\n  Restaurant: 'pizza'\n};\n\nconst categoryMarkerColors = {\n  Commercial: 'green',\n  Residential: 'blue',\n  Other: 'orange'\n};\n\nclass BuildingPermit {\n  constructor(data) {\n    this.type = data.type || (data.permit_type_description || '').replace(/^Building /i, '');\n    this.subtype = data.subtype || data.permit_subtype_description;\n    this.address = data.address || data.mapped_location_address;\n    this.city = data.city || data.mapped_location_city;\n    this.state = data.state || data.mapped_location_state;\n    this.zipCode = data.zipCode || data.zip || data.mapped_location_zip;\n    this.contact = data.contact;\n    this.councilDistrict = data.councilDistrict || data.council_dist;\n    this.dateIssued = new Date(data.dateIssued || data.date_issued);\n    if (data.latitude && data.longitude) {\n      this.latitude = data.latitude;\n      this.longitude = data.longitude;\n    } else if (data.mapped_location) {\n      this.latitude = data.mapped_location.coordinates[1];\n      this.longitude = data.mapped_location.coordinates[0];\n    }\n    this.permit = data.permit;\n    this.subdivisionLot = data.subdivisionLot || data.subdivision_lot;\n    this.purpose = data.purpose;\n  }\n\n  key() {\n    return `${this.permit}${this.address}${this.type}${this.latitude}${this.longitude}${this.dateIssued}${this.purpose}${this.contact}${this.subtype}`;\n  }\n\n  category() {\n    if (this.type.indexOf(Util.categorySeparator) > -1) {\n      return this.type.split(Util.categorySeparator)[0];\n    }\n    return 'Other';\n  }\n\n  position() {\n    if (this.latitude && this.longitude) {\n      return [this.latitude, this.longitude];\n    }\n  }\n\n  hasCoordinates() {\n    return this.position();\n  }\n\n  typeContains(word) {\n    return this.type.toLowerCase().split(/\\s+/).indexOf(word) > -1;\n  }\n\n  subtypeContains(word) {\n    return this.subtype.toLowerCase().split(/\\s+/).indexOf(word) > -1;\n  }\n\n  isRepair() {\n    return this.typeContains('rehab') || this.typeContains('addition') ||\n      this.typeContains('roofing') || this.typeContains('fire') ||\n      this.typeContains('siding');\n  }\n\n  isDemolition() {\n    return this.typeContains('demolition');\n  }\n\n  isTree() {\n    return this.typeContains('tree');\n  }\n\n  isPool() {\n    return this.subtypeContains('pool') || this.subtypeContains('pools');\n  }\n\n  isRestaurant() {\n    return this.subtypeContains('restaurant');\n  }\n\n  isCar() {\n    return this.subtypeContains('carport') || this.subtypeContains('garage');\n  }\n\n  icon() {\n    if (this.isRestaurant()) {\n      return categoryIcons.Restaurant;\n    }\n    if (this.isTree()) {\n      return categoryIcons.Tree;\n    }\n    if (this.isPool()) {\n      return categoryIcons.Pool;\n    }\n    if (this.isRepair()) {\n      return categoryIcons.Repair;\n    }\n    if (this.isDemolition()) {\n      return categoryIcons.Demolition;\n    }\n    return categoryIcons[this.category()];\n  }\n\n  year() {\n    return this.dateIssued.getFullYear();\n  }\n\n  markerColor() {\n    return categoryMarkerColors[this.category()];\n  }\n\n  matches(criteria) {\n    const { zipCode, type, year } = criteria;\n    return this.matchesZipCode(zipCode) && this.matchesType(type) && this.matchesYear(year);\n  }\n\n  matchesYear(year) {\n    return (year && this.year().toString() === year) || year === 'all';\n  }\n\n  matchesType(type) {\n    if (type.indexOf('all-') === 0) {\n      const category = type.split('all-')[1];\n      return this.category() === category;\n    }\n    return this.type === type || type === 'all';\n  }\n\n  matchesZipCode(zipCode) {\n    return this.zipCode === zipCode || zipCode === 'all';\n  }\n}\n\nexport default BuildingPermit;\n","import SocrataApi from './SocrataApi';\nimport BuildingPermit from './BuildingPermit';\n\nconst apiUrl = 'https://data.nashville.gov/resource/p5r5-bnga.json?$limit=1500';\n\n// https://data.nashville.gov/Licenses-Permits/Building-Permits-Issued/3h5w-q8b7\n// https://dev.socrata.com/foundry/data.nashville.gov/p5r5-bnga\nclass BuildingPermitsIssuedApi extends SocrataApi {\n  constructor(appToken) {\n    super(appToken, apiUrl);\n  }\n\n  async getBuildingPermits() {\n    const query = '';\n    const dataFormatter = rows => rows.map(row => new BuildingPermit(row));\n    const rows = await this.get(query, dataFormatter);\n    return rows.map(row => new BuildingPermit(row));\n  }\n}\n\nexport default BuildingPermitsIssuedApi;\n","import React, { Component } from 'react';\nimport Util from '../models/Util';\n\nclass ZipCodeSelect extends Component {\n  onChange = event => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    const { allZipCodes, selectedZipCode } = this.props;\n    const zipCodes = Util.uniq(allZipCodes.sort());\n\n    return (\n      <div>\n        <label\n          htmlFor=\"zip\"\n          className=\"mr-1\"\n        >Zip code:</label>\n        <select\n          id=\"zip\"\n          className=\"form-select mr-4\"\n          onChange={this.onChange}\n          value={selectedZipCode}\n        >\n          <option value=\"all\">All</option>\n          {zipCodes.map(zipCode => (\n            <option value={zipCode} key={zipCode}>{zipCode}</option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default ZipCodeSelect;\n","import React, { Component } from 'react';\nimport Util from '../models/Util';\n\nconst displayName = function(type, allTypes) {\n  const count = allTypes.filter(otherType => otherType === type).length;\n  if (type.indexOf(Util.categorySeparator) < 0) {\n    return `${type} (${count})`;\n  }\n  const subcategory = type.split(Util.categorySeparator)[1];\n  return `${subcategory} (${count})`;\n};\n\nconst getCategories = function(types) {\n  let categories = [];\n\n  for (const type of types) {\n    if (type.indexOf(Util.categorySeparator) > -1) {\n      const category = type.split(Util.categorySeparator)[0];\n      categories.push(category);\n    }\n  }\n\n  categories = Util.uniq(categories.sort());\n\n  if (categories.length < types.length) {\n    categories.push('Other');\n  }\n\n  return categories;\n};\n\nconst getTypesForCategory = function(types, category) {\n  return types.filter(type => {\n    if (type.indexOf(Util.categorySeparator) < 0) {\n      return category === 'Other';\n    }\n    return type.indexOf(category) === 0\n  });\n};\n\nconst getTypesByCategory = function(types, categories) {\n  const result = {};\n  for (const category of categories) {\n    result[category] = getTypesForCategory(types, category);\n  }\n  return result;\n};\n\nclass TypeSelect extends Component {\n  onChange = event => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    const { allTypes, selectedType } = this.props;\n    const types = Util.uniq(allTypes.sort());\n    const categories = getCategories(types);\n    const typesByCategory = getTypesByCategory(types, categories);\n\n    return (\n      <div className=\"mr-4\">\n        <label\n          htmlFor=\"type\"\n          className=\"mr-1\"\n        >Permit type:</label>\n        <select\n          id=\"type\"\n          className=\"form-select\"\n          onChange={this.onChange}\n          value={selectedType}\n        >\n          <option value=\"all\">All</option>\n          {categories.map(category => (\n            <optgroup label={category} key={category}>\n              <option value={`all-${category}`}>All {category}</option>\n              {typesByCategory[category].map(type => (\n                <option value={type} key={type}>{displayName(type, allTypes)}</option>\n              ))}\n            </optgroup>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default TypeSelect;\n","import React, { Component } from 'react';\nimport Util from '../models/Util';\n\nconst displayName = function(year, allYears) {\n  const count = allYears.filter(otherYear => otherYear.toString() === year.toString()).length;\n  return `${year} (${count})`;\n};\n\nclass YearSelect extends Component {\n  onChange = event => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    const { allYears, selectedYear } = this.props;\n    const years = Util.uniq(allYears.sort()).reverse();\n\n    return (\n      <div>\n        <label\n          htmlFor=\"year\"\n          className=\"mr-1\"\n        >Year issued:</label>\n        <select\n          id=\"year\"\n          className=\"form-select\"\n          onChange={this.onChange}\n          value={selectedYear}\n        >\n          <option value=\"all\">All</option>\n          {years.map(year => (\n            <option value={year} key={year}>{displayName(year, allYears)}</option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default YearSelect;\n","import React, { Component } from 'react';\nimport ZipCodeSelect from './ZipCodeSelect';\nimport TypeSelect from './TypeSelect';\nimport YearSelect from './YearSelect';\n\nclass FilterForm extends Component {\n  render() {\n    const { buildingPermits, onZipCodeChange, zipCode,\n            onTypeChange, type, onYearChange, year } = this.props;\n    const allZipCodes = buildingPermits.map(permit => permit.zipCode);\n\n    const permitsInZip = buildingPermits.filter(permit => permit.matchesZipCode(zipCode));\n    const allTypes = permitsInZip.map(permit => permit.type);\n\n    const permitsInType = permitsInZip.filter(permit => permit.matchesType(type));\n    const allYears = permitsInType.map(permit => permit.year());\n\n    return (\n      <form\n        className=\"flex-auto flex-justify-end d-flex flex-items-center\"\n      >\n        <ZipCodeSelect\n          onChange={onZipCodeChange}\n          selectedZipCode={zipCode}\n          allZipCodes={allZipCodes}\n        />\n        <TypeSelect\n          onChange={onTypeChange}\n          selectedType={type}\n          allTypes={allTypes}\n        />\n        <YearSelect\n          onChange={onYearChange}\n          selectedYear={year}\n          allYears={allYears}\n        />\n      </form>\n    );\n  }\n}\n\nexport default FilterForm;\n","import React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup, Tooltip } from 'react-leaflet';\nimport L from 'leaflet';\nimport Util from '../models/Util';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet.awesome-markers/dist/leaflet.awesome-markers.css';\nimport './PermitMap.css';\nimport 'leaflet.awesome-markers/dist/leaflet.awesome-markers';\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst getBoundsAndZoom = function(buildingPermits) {\n  const geocodes = buildingPermits.map(permit => permit.position());\n  const defaultZoom = 13;\n  let bounds = null;\n  let zoom = null;\n\n  if (geocodes.length < 2) {\n    zoom = defaultZoom;\n  } else {\n    let minLatGeocode = geocodes[0];\n    let minLngGeocode = geocodes[0];\n    let maxLatGeocode = geocodes[0];\n    let maxLngGeocode = geocodes[0];\n\n    for (const geocode of geocodes) {\n      if (geocode[0] < minLatGeocode[0]) {\n        minLatGeocode = geocode;\n      }\n      if (geocode[0] > maxLatGeocode[0]) {\n        maxLatGeocode = geocode;\n      }\n      if (geocode[1] < minLngGeocode[1]) {\n        minLngGeocode = geocode;\n      }\n      if (geocode[1] > maxLngGeocode[1]) {\n        maxLngGeocode = geocode;\n      }\n    }\n\n    bounds = [minLatGeocode, minLngGeocode, maxLatGeocode, maxLngGeocode];\n  }\n\n  bounds = Util.uniq(bounds);\n  if (!bounds || bounds.length < 2) {\n    bounds = null;\n    zoom = defaultZoom;\n  }\n\n  return { bounds, zoom };\n};\n\nconst getCenterPosition = function(buildingPermits) {\n  let lat = 0;\n  let lng = 0;\n\n  for (const permit of buildingPermits) {\n    lng = lng + permit.longitude;\n    lat = lat + permit.latitude;\n  }\n\n  lat = lat / buildingPermits.length;\n  lng = lng / buildingPermits.length;\n\n  return [lat, lng];\n};\n\nclass PermitMap extends Component {\n  render() {\n    const { buildingPermits } = this.props;\n    const geocodedPermits = buildingPermits.filter(permit => permit.hasCoordinates());\n\n    if (geocodedPermits.length < 1) {\n      return (\n        <p>No building permits in the selected area.</p>\n      );\n    }\n\n    const center = getCenterPosition(geocodedPermits);\n    const { bounds, zoom } = getBoundsAndZoom(geocodedPermits);\n\n    return (\n      <Map\n        id=\"permit-map\"\n        center={center}\n        className=\"map__reactleaflet border\"\n        bounds={bounds}\n        zoom={zoom}\n      >\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {geocodedPermits.map(permit => (\n          <Marker\n            key={permit.key()}\n            position={permit.position()}\n            icon={L.AwesomeMarkers.icon({\n              icon: permit.icon(),\n              markerColor: permit.markerColor(),\n              prefix: 'ion'\n            })}\n          >\n            <Popup>\n              <div className=\"mb-1\">\n                {permit.dateIssued.toLocaleDateString()}\n              </div>\n              <div className=\"popup-long-description\">{permit.purpose}</div>\n            </Popup>\n            <Tooltip>{permit.subtype}</Tooltip>\n          </Marker>\n        ))}\n      </Map>\n    );\n  }\n}\n\nexport default PermitMap;\n","import React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport './PermitList.css';\n\nconst renderIcon = row => {\n  const permit = row.original;\n  const icon = permit.icon();\n  return <div className=\"text-center\"><i className={`ion ion-${icon}`} /></div>;\n};\n\nconst formatDateCell = ({ value }) => {\n  if (value instanceof Date) {\n    const year = value.getFullYear();\n    let month = value.getMonth() + 1;\n    if (month < 10) {\n      month = `0${month}`;\n    }\n    let day = value.getDate();\n    if (day < 10) {\n      day = `0${day}`;\n    }\n    return <div className=\"text-center\">{`${year}-${month}-${day}`}</div>;\n  }\n\n  return <div className=\"text-center\">{value}</div>;\n};\n\nconst formatLongText = ({ value }) => {\n  return (\n    <div\n      title={value}\n    >{value}</div>\n  );\n};\n\nconst centerText = ({ value }) => {\n  return <div className=\"text-center\">{value}</div>\n};\n\nclass PermitList extends Component {\n  render() {\n    const { buildingPermits } = this.props;\n    const geocodedPermits = buildingPermits.filter(permit => permit.hasCoordinates());\n\n    if (geocodedPermits.length < 1) {\n      return null;\n    }\n\n    return (\n      <ReactTable\n        data={geocodedPermits}\n        columns={[\n          {\n            Header: '',\n            accessor: d => d,\n            id: 'icon',\n            headerClassName: 'text-bold',\n            Cell: renderIcon,\n            width: 30,\n            sortable: false\n          },\n          {\n            Header: 'Address',\n            accessor: 'address',\n            headerClassName: 'text-bold',\n            minWidth: 130\n          },\n          {\n            Header: 'Zip code',\n            accessor: 'zipCode',\n            headerClassName: 'text-bold',\n            Cell: centerText\n          },\n          {\n            Header: 'Type',\n            accessor: 'type',\n            minWidth: 130,\n            headerClassName: 'text-bold',\n            Cell: centerText\n          },\n          {\n            Header: 'Sub-type',\n            accessor: 'subtype',\n            headerClassName: 'text-bold',\n            Cell: formatLongText,\n            minWidth: 170\n          },\n          {\n            Header: 'Council district',\n            headerClassName: 'text-bold',\n            accessor: 'councilDistrict',\n            Cell: centerText\n          },\n          {\n            Header: 'Date issued',\n            headerClassName: 'text-bold',\n            accessor: 'dateIssued',\n            minWidth: 80,\n            Cell: formatDateCell\n          }\n        ]}\n        pageSize={3}\n        showPageSizeOptions={false}\n        className=\"-striped -highlight permit-list\"\n      />\n    );\n  }\n}\n\nexport default PermitList;\n","import React, { Component } from 'react';\nimport BuildingPermitsIssuedApi from './models/BuildingPermitsIssuedApi';\nimport Config from './config.json';\nimport FilterForm from './components/FilterForm';\nimport PermitMap from './components/PermitMap';\nimport PermitList from './components/PermitList';\nimport LocalStorage from './models/LocalStorage';\nimport './App.css';\n\nconst zipCodeKey = 'zip-code';\nconst typeKey = 'type';\nconst yearKey = 'year';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      buildingPermits: [],\n      filteredBuildingPermits: [],\n    };\n  }\n\n  componentDidMount() {\n    const api = new BuildingPermitsIssuedApi(Config.socrataApi.appToken);\n    api.getBuildingPermits().then(this.onDataLoaded);\n  }\n\n  onDataLoaded = buildingPermits => {\n    const zipCodes = buildingPermits.filter(permit => permit.zipCode).map(permit => permit.zipCode).sort();\n    let firstZipCode = null;\n    if (zipCodes.length > 0) {\n      firstZipCode = zipCodes[0];\n    }\n\n    this.setState(prevState => {\n      const zipCode = LocalStorage.get(zipCodeKey) || prevState.zipCode || firstZipCode;\n      const type = LocalStorage.get(typeKey) || prevState.type || 'all';\n      const year = LocalStorage.get(yearKey) || prevState.year || 'all';\n\n      return {\n        buildingPermits,\n        isLoading: false,\n        zipCode,\n        type,\n        year,\n        filteredBuildingPermits: this.filterBuildingPermits(buildingPermits,\n                                                            { zipCode, type, year })\n      }\n    });\n  };\n\n  filterBuildingPermits = (buildingPermits, criteria) => {\n    return buildingPermits.filter(permit => permit.matches(criteria));\n  };\n\n  onZipCodeChange = zipCode => {\n    LocalStorage.set(zipCodeKey, zipCode);\n    LocalStorage.set(typeKey, 'all');\n    LocalStorage.set(yearKey, 'all');\n    this.setState(prevState => ({\n      zipCode,\n      type: 'all',\n      year: 'all',\n      filteredBuildingPermits: this.filterBuildingPermits(\n        prevState.buildingPermits,\n        { zipCode, type: 'all', year: 'all' }\n      )\n    }));\n  };\n\n  onTypeChange = type => {\n    LocalStorage.set(typeKey, type);\n    LocalStorage.set(yearKey, 'all');\n    this.setState(prevState => ({\n      type,\n      year: 'all',\n      filteredBuildingPermits: this.filterBuildingPermits(\n        prevState.buildingPermits,\n        { zipCode: prevState.zipCode, type, year: 'all' }\n      )\n    }));\n  };\n\n  onYearChange = year => {\n    LocalStorage.set(yearKey, year);\n    this.setState(prevState => ({\n      year,\n      filteredBuildingPermits: this.filterBuildingPermits(\n        prevState.buildingPermits,\n        { zipCode: prevState.zipCode, year, type: prevState.type }\n      )\n    }));\n  };\n\n  render() {\n    const { buildingPermits, isLoading, zipCode, type, year,\n            filteredBuildingPermits } = this.state;\n\n    return (\n      <div>\n        <header className=\"site-header\">\n          <div className=\"container-lg py-2 d-flex flex-items-center flex-justify-between\">\n            <h1\n              className=\"f3 text-normal\"\n            >Nashville Building Permits</h1>\n            {isLoading ? null : (\n              <FilterForm\n                buildingPermits={buildingPermits}\n                zipCode={zipCode}\n                type={type}\n                year={year}\n                onYearChange={this.onYearChange}\n                onZipCodeChange={this.onZipCodeChange}\n                onTypeChange={this.onTypeChange}\n              />\n            )}\n          </div>\n        </header>\n        <main className=\"site-main\">\n          <div className=\"container-lg\">\n            {isLoading ? (\n              <div className=\"blankslate\">\n                <h2>Loading...</h2>\n              </div>\n            ) : (\n              <div>\n                <PermitMap\n                  buildingPermits={filteredBuildingPermits}\n                />\n                <PermitList\n                  buildingPermits={filteredBuildingPermits}\n                />\n              </div>\n            )}\n          </div>\n        </main>\n        <footer className=\"site-footer\">\n          <div className=\"container-lg text-small py-1 d-flex flex-items-center flex-justify-between\">\n            <a\n              target=\"_blank\"\n              className=\"link-gray\"\n              rel=\"noopener noreferrer\"\n              href=\"https://github.com/cheshire137/nash-building-permits\"\n            >View source</a>\n            <span>\n              Data from <a\n                target=\"_blank\"\n                className=\"link-gray\"\n                rel=\"noopener noreferrer\"\n                href=\"https://data.nashville.gov/Licenses-Permits/Building-Permits-Issued/3h5w-q8b7\"\n              >Nashville Building Permits Issued</a>\n            </span>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}